{"version":3,"sources":["components/NewPost/NewPost.js","components/Post/ava.png","components/Post/Post.js","components/ListPost/ListPost.js","components/ViewPost/ViewPost.js","App.js","reportWebVitals.js","index.js"],"names":["initForm","textarea","NewPost","props","url","edit","body","id","setEdit","navigate","useNavigate","useState","form","setForm","useEffect","className","to","onSubmit","evt","preventDefault","console","log","fetch","method","JSON","stringify","content","then","resp","status","catch","error","name","value","onChange","target","type","checked","prevForm","Post","src","ava","alt","children","ListPost","posts","updatePosts","map","item","ViewPost","params","useParams","length","onClick","prev","App","setPosts","response","json","post","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd3779e8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./desktop.scss\";\n\nconst initForm = { textarea: \"\" };\n\nfunction NewPost(props) {\n  const { url, edit, body, id, setEdit } = props;\n  const navigate = useNavigate();\n  const [form, setForm] = useState(initForm);\n\n  useEffect(() => {\n    if (body) {\n      setForm({ textarea: body });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const handleChange = ({ target }) => {\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    setForm((prevForm) => {\n      return { ...prevForm, [name]: value };\n    });\n  };\n\n  const handleEdit = (evt) => {\n    evt.preventDefault();\n    console.log(url);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        id: id,\n        content: form.textarea,\n      }),\n    })\n      .then((resp) => {\n        if (resp.status === 204) {\n          setEdit(false);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        id: 0,\n        content: form.textarea,\n      }),\n    })\n      .then((resp) => {\n        if (resp.status === 204) {\n          navigate(\"/\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    setForm(initForm);\n  };\n  return (\n    <div className=\"NewPost\">\n      <div className=\"NewPost-Title\">\n        <span className=\"NewPost-Title-item\">\n          <span className=\"material-icons\">create</span>Публикации\n        </span>\n        <span className=\"NewPost-Title-item\">\n          <span className=\"material-icons\">photo_camera</span>Фотографии\n        </span>\n        <span className=\"NewPost-Title-item\">\n          <span className=\"material-icons\">videocam</span>Прямой эфир\n        </span>\n        <span className=\"NewPost-Title-item\">\n          <span className=\"material-icons\">more_horiz</span>Еще\n        </span>\n        <span className=\"NewPost-Title-item\">\n          <Link className=\"material-icons close\" to=\"/\">\n            close\n          </Link>\n        </span>\n      </div>\n      <form\n        className=\"NewPost-form\"\n        onSubmit={edit ? handleEdit : handleSubmit}\n      >\n        <textarea\n          id=\"new\"\n          name=\"textarea\"\n          className={\"textarea\"}\n          value={form.textarea}\n          onChange={handleChange}\n        />\n        <input\n          className=\"material-icons send\"\n          type=\"submit\"\n          value={edit ? \"Cоранить\" : \"Опубликовать\"}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default NewPost;\n","export default __webpack_public_path__ + \"static/media/ava.d393fa70.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./desktop.scss\";\nimport ava from \"./ava.png\";\n\nconst Post = (props) => {\n  return (\n    <Link to={`/posts/${props.id}`} className=\"Post-Link\">\n      <div className=\"Post\" id={props.id}>\n        <div className=\"Post__title\">\n          <img src={ava} className=\"title__ava\" alt=\"ava\" />\n          <div className=\"title__text\">\n            <div className=\"name\">Имя пользователя</div>\n            <div className=\"status\">Пользователь</div>\n          </div>\n        </div>\n        <div className=\"Post__body\">{props.body}</div>\n        <div className=\"Post-footer\">\n          <div className=\"Post-footer__item like\">\n            <span className=\"material-icons\">thumb_up_off_alt</span> Нравится\n          </div>\n          <div className=\"Post-footer__item  comment\">\n            <span className=\"material-icons\">chat_bubble_outline</span>\n            Комментировать\n          </div>\n        </div>\n        {props.children}\n      </div>\n    </Link>\n  );\n};\n\nPost.propTypes = {\n  id: PropTypes.string,\n  body: PropTypes.string,\n};\n\nexport default Post;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Post from \"../Post/Post\";\nimport \"./desktop.scss\";\n\nfunction ListPost({ posts, updatePosts }) {\n  useEffect(() => {\n    updatePosts();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"ListPost\">\n      <div className=\"ListPost-title\">\n        <Link to=\"/posts/new\" className=\"btn creet-post\">\n          Создать пост\n        </Link>\n      </div>\n      <div className=\"ListPost-row\">\n        {posts &&\n          posts.map((item) => {\n            return <Post key={item.id} id={item.id} body={item.content} />;\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default ListPost;\n","import React, { useEffect, useState } from \"react\";\nimport Post from \"../Post/Post\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"./desktop.scss\";\nimport NewPost from \"../NewPost/NewPost\";\n\nfunction ViewPost({ url, posts, updatePosts }) {\n  const params = useParams();\n  const navigate = useNavigate();\n  const [edit, setEdit] = useState(false);\n\n  useEffect(() => {\n    if (posts.length === 0) {\n      updatePosts();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    updatePosts();\n    // eslint-disable-next-line\n  }, [edit]);\n\n  const handleDelite = (id) => {\n    fetch(`${url}/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((resp) => {\n        if (resp.status === 204) {\n          navigate(\"/\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div className=\"ViewPost\">\n      {!edit &&\n        posts &&\n        posts.map((item) => {\n          if (item.id === params.id) {\n            return (\n              <Post key={item.id} id={item.id} body={item.content}>\n                <div className=\"ViewPost-controll\">\n                  <button\n                    onClick={() => setEdit((prev) => !prev)}\n                    className=\"btn edit\"\n                  >\n                    Изменить\n                  </button>\n                  <button\n                    onClick={() => handleDelite(item.id)}\n                    className=\"btn delite\"\n                  >\n                    Удалить\n                  </button>\n                </div>\n              </Post>\n            );\n          } else {\n            return null;\n          }\n        })}\n      {edit &&\n        posts &&\n        posts.map((item) => {\n          if (item.id === params.id) {\n            return (\n              <NewPost\n                edit\n                key={item.id}\n                id={item.id}\n                body={item.content}\n                url={url}\n                setEdit={setEdit}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default ViewPost;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport NewPost from \"./components/NewPost/NewPost\";\nimport ListPost from \"./components/ListPost/ListPost\";\nimport ViewPost from \"./components/ViewPost/ViewPost\";\n\n// \"https://react-home-works-router-crid.herokuapp.com/\";\nconst adres = \"https://react-home-works-router-crid.herokuapp.com\";\n// const adres = \"http://localhost\";\n\nconst port = \"\";\nconst url = `${adres}:${port}/posts`;\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n\n  const updatePosts = () => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((post) => {\n        setPosts(post);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {/* <Post /> */}\n        <Routes>\n          <Route path=\"/posts/new\" element={<NewPost url={url} />} />\n          <Route\n            path=\"/posts/:id\"\n            element={\n              <ViewPost\n                posts={posts}\n                setPosts={setPosts}\n                url={url}\n                updatePosts={updatePosts}\n              />\n            }\n          />\n          <Route\n            path=\"/\"\n            element={\n              <ListPost\n                posts={posts}\n                setPosts={setPosts}\n                url={url}\n                updatePosts={updatePosts}\n              />\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}